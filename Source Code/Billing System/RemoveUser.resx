<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>